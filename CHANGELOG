# Changelog

Notable changes to the Dungeon Roguelike Game will be documented here.
The formatting is based on [Keep a Changelog](https://keepachangelog.com/en/1.1.0/)

## [1.2.0] - 2025-2-10

### Added

- Perlin gradient noise for hardness determination, which
  defines a grid of gradient vectors, computes the dot product,
  and then interpolates their values
- Definitions for border is now defined in the header file
- Switch operation using -h for printing an additional board for
  hardness values that shows a bolder character for a higher
  hardness value and vice versa

### Changed

- The 2d dungeon array is now a Tile struct instead of char array,
  and now contains a type of symbol and a hardness value from 0-255
- buildPerimeter has been replaced with initDungeon and now sets the
  hardness of the board based on the Perlin noise algorithm and then 
  sets the type as rock and the edges as max-hardness border rock
- Instead of length for X and width for Y, now fits the convention of
  using width for X and height for Y values
- Makefile updated to include perlin.c

## [1.1.0] - 2025-2-7

### Added 

- Header file containing definitions and structs, the global dungeon,
  and methods

### Changed

- Makefile now uses CC and CFLAGS instead of hardcoding
- Makefile was updated to check if heaader file has changed during make
- Random room count has been updated from 6-8 to 7-12 for more filled
  space and varibility

### Fixed

- Make clean works properly to remove output files

## [1.0.1] - 2025-2-7

### Added

- Git Repo is for the project has been made, link below
- Heading in README for which assignment it refers to

## [1.0.0] - 2025-2-4

### Added

- Created README
- Created Makefile

### Changed

- Logic for building corridors now has an 80% chance of building in the X
  direction and a 20% chance to build in the Y direction to increase
  the number of iterations it takes for the Y's to line up

## [0.2.0] - 2025-2-3

### Added

- Enums for floor, corridor, upward and downward stairs, and rock
- Print statements for failure to allocate memory or build rooms

### Fixed

- Rooms incorrectly checking for overlapping rooms, resulting in large
  rooms completely enveloping smaller rooms, making them practically
  invisible

## [0.1.0] - 2025-2-3

### Added

- Building the perimeter for the dungeon (80x21)
- Generating between 6 and 8 randomly sized and located
  rooms to be placed in the dungeon
- Connecting each room with a random other room with corridors
- Building upward and downward stairs in two different rooms
- Printing the dungeon

https://github.com/sethclover/dungeonGame
